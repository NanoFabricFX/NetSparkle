name: Publish to NuGet
on:
  push:
    branches:
      - develop # Your default release branch
jobs:
  publish:
    name: List on NuGet
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: nuget/setup-nuget@v1
        with:
            nuget-api-key: ${{secrets.NUGET_API_KEY}}
            nuget-version: '5.x'

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.0.0

      # Required for a specific dotnet version that doesn't come with ubuntu-latest / windows-latest
      # Visit bit.ly/2synnZl to see the list of SDKs that are pre-installed with ubuntu-latest / windows-latest
      # - name: Setup dotnet
      #   uses: actions/setup-dotnet@v1
      #   with:
      #     dotnet-version: 3.1.100
      - name: Build NetSparkle in Release
        run: dotnet build src/NetSparkle/NetSparkle.csproj --configuration Release
      
      - name: Build NetSparkle.UI.WinForms.NetCore in Release
        run: dotnet build src/NetSparkle.UI.WinForms.NetCore/NetSparkle.UI.WinForms.NetCore.csproj --configuration Release
      
      - name: Build NetSparkle.UI.WPF in Release
        run: dotnet build src/NetSparkle.UI.WPF/NetSparkle.UI.WPF.csproj --configuration Release
        
      # Publish
      - name: Publish Netsparkle.New on version change
        uses: rohith/publish-nuget@v2.5.5
        with:
          PROJECT_FILE_PATH: src/NetSparkle/NetSparkle.csproj # Relative to repository root
          # VERSION_FILE_PATH: Directory.Build.props # Filepath with version info, relative to repository root. Defaults to project file
          # VERSION_REGEX: <Version>(.*)<\/Version> # Regex pattern to extract version info in a capturing group
          TAG_COMMIT: false # Flag to enable / disalge git tagging
          # TAG_FORMAT: v* # Format of the git tag, [*] gets replaced with version
          NUGET_KEY: ${{secrets.NUGET_API_KEY}} # nuget.org API key
          PACKAGE_NAME: NetSparkle.New
        
      - name: Publish NetSparkleUpdater.UI.WPF on version change
        uses: rohith/publish-nuget@v2.5.5
        with:
          PROJECT_FILE_PATH: src/NetSparkle.UI.WPF/NetSparkle.UI.WPF.csproj # Relative to repository root
          # VERSION_FILE_PATH: Directory.Build.props # Filepath with version info, relative to repository root. Defaults to project file
          # VERSION_REGEX: <Version>(.*)<\/Version> # Regex pattern to extract version info in a capturing group
          TAG_COMMIT: false # Flag to enable / disalge git tagging
          # TAG_FORMAT: v* # Format of the git tag, [*] gets replaced with version
          NUGET_KEY: ${{secrets.NUGET_API_KEY}} # nuget.org API key
          PACKAGE_NAME: NetSparkleUpdater.UI.WPF
        
      - name: Publish NetSparkleUpdater.UI.WinForms.NetCore on version change
        uses: rohith/publish-nuget@v2.5.5
        with:
          PROJECT_FILE_PATH: src/NetSparkle.UI.WinForms.NetCore/NetSparkle.UI.WinForms.NetCore.csproj # Relative to repository root
          # VERSION_FILE_PATH: Directory.Build.props # Filepath with version info, relative to repository root. Defaults to project file
          # VERSION_REGEX: <Version>(.*)<\/Version> # Regex pattern to extract version info in a capturing group
          TAG_COMMIT: false # Flag to enable / disalge git tagging
          # TAG_FORMAT: v* # Format of the git tag, [*] gets replaced with version
          NUGET_KEY: ${{secrets.NUGET_API_KEY}} # nuget.org API key
          PACKAGE_NAME: NetSparkleUpdater.UI.WinForms.NetCore
        
      - name: Publish NetSparkleUpdater.UI.Avalonia on version change
        uses: rohith/publish-nuget@v2.5.5
        with:
          PROJECT_FILE_PATH: src/NetSparkle.UI.Avalonia/NetSparkle.UI.Avalonia.csproj # Relative to repository root
          # VERSION_FILE_PATH: Directory.Build.props # Filepath with version info, relative to repository root. Defaults to project file
          # VERSION_REGEX: <Version>(.*)<\/Version> # Regex pattern to extract version info in a capturing group
          TAG_COMMIT: false # Flag to enable / disalge git tagging
          # TAG_FORMAT: v* # Format of the git tag, [*] gets replaced with version
          NUGET_KEY: ${{secrets.NUGET_API_KEY}} # nuget.org API key
          PACKAGE_NAME: NetSparkleUpdater.UI.Avalonia

      - name: Build NetSparkle.UI.WinForms.NetFramework in Release
        run: msbuild src/NetSparkle.UI.WinForms.NetFramework/NetSparkle.UI.WinForms.NetFramework.csproj /property:Configuration=Release /p:OutputPath=../../nuget/winformsnetframework/lib/net451

      - name: Setup NetSparkleUpdater.UI.WinForms.NetFramework folder
        run: |
          del nuget\winformsnetframework\lib\net451\NetSparkle.dll
          del nuget\winformsnetframework\lib\net451\NetSparkle.pdb
          copy LICENSE.md nuget\winformsnetframework\LICENSE.md
          copy src\NetSparkle\ArtWork\software-update-available.png nuget\winformsnetframework\software-update-available.png
          
      - name: Publish NetSparkleUpdater.UI.WinForms.NetFramework
        run: |
          cd nuget/winformsnetframework
          nuget pack NetSparkleUpdater.UI.WinForms.NetFramework.nuspec -verbosity detailed
          nuget push *.nupkg -Source https://www.nuget.org/api/v2/package -SkipDuplicate -NoSymbols -verbosity detailed
          cd ../../

      - name: Build NetSparkleUpdater.Tools for all operating systems
        run: |
          dotnet publish src/NetSparkle.Tools.AppCastGenerator --configuration Release -o nuget/tools/tools/windows/ -r win-x86
          dotnet publish src/NetSparkle.Tools.DSAHelper --configuration Release -o nuget/tools/tools/windows/ -r win-x86
          dotnet publish src/NetSparkle.Tools.AppCastGenerator --configuration Release -o nuget/tools/tools/macOS/ -r osx-x64
          dotnet publish src/NetSparkle.Tools.DSAHelper --configuration Release -o nuget/tools/tools/macOS/ -r osx-x64
          dotnet publish src/NetSparkle.Tools.AppCastGenerator --configuration Release -o nuget/tools/tools/linux/ -r linux-x64
          dotnet publish src/NetSparkle.Tools.DSAHelper --configuration Release -o nuget/tools/tools/linux/ -r linux-x64

      - name: Copy extra output to NetSparkleUpdater.Tools output
        run: |
          mkdir nuget\tools\lib
          mkdir nuget\tools\content
          mkdir nuget\tools\content\Extras
          xcopy /s /q /y Extras\* nuget\tools\content\Extras\
          copy LICENSE.md nuget\tools\LICENSE.md
          copy src\NetSparkle\ArtWork\software-update-available.png nuget\tools\software-update-available.png

      - name: Publish NetSparkleUpdater.Tools
        run: |
          cd nuget/tools
          nuget pack NetSparkleUpdater.Tools.nuspec
          nuget push *.nupkg -Source https://www.nuget.org/api/v2/package -SkipDuplicate -NoSymbols
          cd ../../